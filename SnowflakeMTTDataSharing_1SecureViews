-- =====================================================================
-- OPTION 1. SECURE VIEWS
-- =====================================================================

--Option 1: Create secure views - without row access policies- to filter rows and share them in a listing
USE SCHEMA SECURE_VIEWS;
-- Secure view for customer summary with aggregated data
--Step 1.1 Create a ssecure view for the client and account mapping table which will be part of the data share listing
CREATE OR REPLACE SECURE VIEW SECURE_VIEWS.CUSTOMER_ACCOUNT_MAPPING_SECURE_VIEW AS
SELECT *
FROM CORE_DATA.CUSTOMER_ACCOUNT_MAPPING cam
WHERE cam.IS_ACTIVE = TRUE AND cam.ACCOUNT_LOCATOR = CURRENT_ACCOUNT();
    
--Step 1.2 Create secure views on base tables to filter customer specific rows
CREATE OR REPLACE SECURE VIEW CUSTOMER_SECURE_VIEW AS
SELECT *
FROM CORE_DATA.CUSTOMERS c
WHERE c.CUSTOMER_KEY in (
        SELECT CUSTOMER_KEY
        FROM SECURE_VIEWS.CUSTOMER_ACCOUNT_MAPPING_SECURE_VIEW cam
        WHERE cam.IS_ACTIVE = TRUE AND cam.ACCOUNT_LOCATOR = CURRENT_ACCOUNT()
    );

CREATE OR REPLACE SECURE VIEW SALES_TRANSACTIONS_SECURE_VIEW AS
SELECT *
FROM CORE_DATA.SALES_TRANSACTIONS s
WHERE s.CUSTOMER_KEY in (
        SELECT CUSTOMER_KEY
        FROM SECURE_VIEWS.CUSTOMER_ACCOUNT_MAPPING_SECURE_VIEW cam
        WHERE cam.IS_ACTIVE = TRUE AND cam.ACCOUNT_LOCATOR = CURRENT_ACCOUNT()
    );
    
CREATE OR REPLACE SECURE VIEW PRODUCTS_SECURE_VIEW AS
SELECT *
FROM CORE_DATA.PRODUCTS p
WHERE p.CUSTOMER_KEY in (
        SELECT CUSTOMER_KEY
        FROM SECURE_VIEWS.CUSTOMER_ACCOUNT_MAPPING_SECURE_VIEW cam
        WHERE cam.IS_ACTIVE = TRUE AND cam.ACCOUNT_LOCATOR = CURRENT_ACCOUNT()
    );
    
--Step 1.3 Create Share
CREATE OR REPLACE SHARE SHARE_SECURE_VIEWS 
COMMENT = 'Secure customer data share with dynamic row-level filtering without row access policies';

-- Grant usage on database and schemas to the share
GRANT USAGE ON DATABASE SECURE_DATA_SHARING TO SHARE SHARE_SECURE_VIEWS;
GRANT USAGE ON SCHEMA SECURE_DATA_SHARING.SECURE_VIEWS TO SHARE SHARE_SECURE_VIEWS;

-- Grant access to secure views
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_VIEWS.CUSTOMER_ACCOUNT_MAPPING_SECURE_VIEW TO SHARE SHARE_SECURE_VIEWS;
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_VIEWS.CUSTOMER_SECURE_VIEW TO SHARE SHARE_SECURE_VIEWS;
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_VIEWS.SALES_TRANSACTIONS_SECURE_VIEW TO SHARE SHARE_SECURE_VIEWS;
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_VIEWS.PRODUCTS_SECURE_VIEW TO SHARE SHARE_SECURE_VIEWS;

--Step 1.4 Create Listing that includes the share created above. Example below is a very basic.
--Feel free to elaborate the YAML description here or expand the listing information in Snowsight listings wizard
CREATE EXTERNAL LISTING IF NOT EXISTS LISTING_SECURE_VIEWS SHARE SHARE_SECURE_VIEWS AS $$
title: "CUSTOMER DATA SECURE VIEWS"
description: "This listing provides access CUSTOMER DATA IN SECURE VIEWS"
listing_terms:
   type: "STANDARD"
targets:
    accounts: ["CUSTORG1.ACOUNTNAME1","CUSTORG2.ACOUNTNAME2"]
$$ COMMENT = 'Change your target accounts as created in the mapping table';

---=== End of Settigng up Secure Views ===---
