-- =====================================================================
-- OPTION 4. SECURE MATERIALIZED VIEWS
-- =====================================================================
--Step 4.1 DROP ROW ACCESS POLICIES ON BASE TABLES
USE SCHEMA CORE_DATA;
ALTER TABLE CUSTOMERS DROP ROW ACCESS POLICY CUSTOMER_ACCOUNT_FILTER;
ALTER TABLE SALES_TRANSACTIONS DROP ROW ACCESS POLICY CUSTOMER_ACCOUNT_FILTER;
ALTER TABLE PRODUCTS DROP ROW ACCESS POLICY CUSTOMER_ACCOUNT_FILTER;

--Step 4.2 Create USER DEFINED FUNCTION TO FILTER THE ROWS TO CRESTE Secure Materialized Views from base tables
--Create seperate schema for each customer so it holds SECURE MATERIALIZED VIEWS belong to that customer
CREATE OR REPLACE SCHEMA SECURE_MATERIALIZED_VIEWS_<CLIENTX>;
USE SCHEMA SECURE_MATERIALIZED_VIEWS_<CLIENTX>;

CREATE OR REPLACE FUNCTION FILTER_CUST_ROW(CUST_KEY varchar(50), ACC_LOCATOR varchar(50)) RETURNS BOOLEAN LANGUAGE SQL AS $$
 EXISTS (SELECT 1 
        FROM CORE_DATA.CUSTOMER_ACCOUNT_MAPPING cam
        WHERE cam.IS_ACTIVE = TRUE AND CAM.CUSTOMER_KEY = CUST_KEY AND  cam.ACCOUNT_LOCATOR = ACC_LOCATOR)
 $$;
 
--Step 4.3 CREATE SECURE MATERIALIZED VIEWS
CREATE OR REPLACE SECURE MATERIALIZED VIEW CUSTOMERS_SMV AS
SELECT *
FROM CORE_DATA.CUSTOMERS c
WHERE FILTER_CUST_ROW(c.CUSTOMER_KEY, 'UZC57412');

CREATE OR REPLACE SECURE MATERIALIZED VIEW PRODUCTS_SMV AS
SELECT *
FROM CORE_DATA.PRODUCTS p
WHERE FILTER_CUST_ROW(P.CUSTOMER_KEY, 'UZC57412');

CREATE OR REPLACE SECURE MATERIALIZED VIEW SALES_TRANSACTIONS_SMV AS
SELECT *
FROM CORE_DATA.SALES_TRANSACTIONS s
WHERE FILTER_CUST_ROW(S.CUSTOMER_KEY, 'UZC57412');

--Step 4.4 Create a share with SECURE MATERIALIZED VIEWS
-- Create share for customer data. Note the share is specific to each customer
CREATE SHARE IF NOT EXISTS SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX> COMMENT = 'Secure customer data share with SECURE MATERIALIED VIEWS';

-- Grant usage on database and schemas to the share
GRANT USAGE ON DATABASE SECURE_DATA_SHARING TO SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX>;
GRANT USAGE ON SCHEMA SECURE_DATA_SHARING.SECURE_MATERIALIZED_VIEWS_<CLIENTX> TO SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX>;

-- Grant access to Dynamic Tables
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_MATERIALIZED_VIEWS_<CLIENTX>.CUSTOMERS_SMV TO SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX>;
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_MATERIALIZED_VIEWS_<CLIENTX>.SALES_TRANSACTIONS_SMV TO SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX>;
GRANT SELECT ON VIEW SECURE_DATA_SHARING.SECURE_MATERIALIZED_VIEWS_<CLIENTX>.PRODUCTS_SMV TO SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX>;
    
--Step 4.5 Create Listing that includes the share created above. Example below is a very basic.
--Feel free to elaborate the YML ddescription here or expand the listing information in Snowsight listings wizard
CREATE EXTERNAL LISTING IF NOT EXISTS LISTING_SECURE_MATERIALIZED_VIEWS_<CLIENTX> SHARE SHARE_SECURE_MATERIALIZED_VIEWS_<CLIENTX> AS $$
title: "CUSTOMER DATA WITH SECURE_MATERIALIZED_VIEWS_<CLIENTX> for customer AWS2"
description: "This listing provides access CUSTOMER DATA with SECURE_MATERIALIZED_VIEWS_<CLIENTX>"
listing_terms:
   type: "STANDARD"
targets:
    accounts: ["CUSTORG1.ACOUNTNAME1"]
$$ COMMENT = 'Change your target account name  as created in the mapping table';


--=== End of Setting up Secure Materialized Views ===---
